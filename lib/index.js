// Generated by CoffeeScript 1.8.0
(function() {
  var Dairy, KeyedQueue, MINUTE, SECOND;

  KeyedQueue = require("keyed-queue");

  SECOND = 1000;

  MINUTE = SECOND * 60;

  Dairy = function(time_to_live, check_interval) {
    var expire, instance, interval_id, queue;
    time_to_live = Number(time_to_live || MINUTE);
    check_interval = Number(check_interval || SECOND);
    if (isNaN(time_to_live)) {
      throw new TypeError("timeToLive must be numeric");
    }
    if (isNaN(check_interval)) {
      throw new TypeError("checkInterval must be numeric");
    }
    queue = KeyedQueue();
    interval_id = void 0;
    expire = function() {
      var now, time, _results;
      now = Date.now();
      time = queue.peek().expires_at;
      _results = [];
      while (time < now) {
        queue.dequeue();
        _results.push(time = queue.peek().expires_at);
      }
      return _results;
    };
    instance = {
      add: function(key, value) {
        queue.enqueue(key, {
          value: value,
          expires_at: Date.now() + time_to_live
        });
        return instance;
      },
      get: function(key) {
        return queue.get(key).value;
      },
      start: function() {
        interval_id = setInterval(expire, check_interval);
        return instance;
      },
      stop: function() {
        clearInterval(interval_id);
        return instance;
      }
    };
    instance.has = queue.has;
    isntance.size = queue.size;
    return instance;
  };

  module.exports = Dairy;

}).call(this);
